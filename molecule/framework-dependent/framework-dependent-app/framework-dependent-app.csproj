<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net6.0,net7.0;net8.0;net9.0</TargetFrameworks>
    <RootNamespace>framework_dependent_app</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <!-- Makes sure a file which is located outside of the project directory structure,
         but is linked into the project can be deployed correctly.
         Non-regression test for https://github.com/qmfrederik/dotnet-packaging/issues/81 -->
    <Content Include="../../../README.md" CopyToPublishDirectory="PreserveNewest">
      <Link>README.md</Link>
      <LinuxPath>/etc/dotnet-packaging/README.md</LinuxPath>
    </Content>

    <!-- Test for the LinuxFileMode flag on LinuxFolder entries. In this case, simulate
        the /etc/dotnet-packaging being accessible to the default user and group only. -->
    <LinuxFolder Include="/etc/dotnet-packaging" RemoveOnUninstall="true" LinuxFileMode="770" />

    <!-- Empty files are ignored (and generate a build warning) -->
    <Content Include="../../empty" CopyToPublishDirectory="PreserveNewest" />

    <!-- Hidden files are ignored (and generate a build warning) -->
    <Content Include="../../../.gitignore" CopyToPublishDirectory="PreserveNewest" />
    
    <!-- Another variation, this time of a file which is outside the project root and
         does not have the Link metadata set. -->
    <Content Include="../../../LICENSE" CopyToPublishDirectory="PreserveNewest" LinuxFileMode="1755">
      <LinuxPath>/etc/dotnet-packaging/LICENSE</LinuxPath>
    </Content>
  </ItemGroup>
</Project>
